# A workflow is a customizable, automated process that you can define in your
# repository. It's typically used for continuous integration (CI), continuous
# deployment (CD), and other automation tasks.
#
# Workflows are defined in a YAML file within your repository. This
# configuration file specifies the workflow's name, triggers, jobs, and steps.

name: 01 - Building Blocks

# Workflows are triggered by specific events, such as pushes, pull requests, or
# scheduled events.
on: workflow_dispatch

# A job is a unit of work within a workflow. You can have multiple jobs in a
# workflow, and they can run in parallel (by default) or sequentially.
jobs:

  echo-hello:
    # Each job specifies the runner environment, such as Ubuntu, macOS, or
    # Windows. You choose the environment that best suits your workflow.
    runs-on: ubuntu-latest

    # A step is an individual task within a job. Steps are the smallest building
    # blocks of a workflow and are where the actual work happens. Steps can have
    # inputs and produce outputs, allowing them to pass data between steps.
    steps:
      # Each step MAY have a name that helps identify its purpose. It appears in
      # the GitHub Actions log to provide clarity during execution.
      - name: Say hello
        # Steps execute commands or scripts. These can include shell commands,
        # script files, or even invoking actions from external sources.
        run: echo "Hello, world!"

  echo-goodbye:
    runs-on: ubuntu-latest
    steps:
      - name: Successful step
        run: |
          echo "I will succeed"
          exit 0
      - name: Say goodbye
        run: echo "Goodbye!"

  dont-echo-goodbye:
    runs-on: ubuntu-latest
    steps:
      - name: Failing step
        run: |
          echo "I will fail"
          exit 1
      # This second step will never run because the first job fails
      # with exit code 1.
      - name: Say goodbye
        run: echo "Goodbye!"
